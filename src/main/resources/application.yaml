spring:
  application:
    name: Professional User Profile
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQL94Dialect
    database: postgresql
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/pup}
    username: ${SPRING_DATASOURCE_USERNAME:pup}
    password: ${SPRING_DATASOURCE_PASSWORD:pup}
    platform: postgresql
    tomcat:
      max-active: ${MAX_ACTIVE_DB_CONNECTIONS:50} # Maximum number of active connections that can be allocated from this pool at the same time.
      max-idle: ${MAX_IDLE_DB_CONNECTIONS:25}
      max-wait: ${MAX_WAIT_DB_CONNECTIONS:10000} # Number of ms to wait before throwing an exception if no connection is available.
      test-on-borrow: ${TEST_ON_BORROW_DB_CONNECTION:true} # Validate the connection before borrowing it from the pool.
  batch:
    initialize-schema: always
    job:
      enabled: ${ENABLE_CRON:true}
      csvUpload: ${TTL_CRON_EXPRESSION:"*/10 * * * * *"}
  liquibase:
    enabled: ${ENABLE_DB_MIGRATE:true}
    change-log: classpath:/db/changelog/db.changelog-master.yaml

management:
  endpoints:
    web:
      base-path: '/'
      exposure:
        include:
         - health
         - info
  health:
    db:
      enabled: true
    disk:
      enabled: true
      threshold: ${HEALTH_DISK_THRESHOLD:262144000}
    status:
     order:
       - FATAL
       - DOWN
       - UNKNOWN
       - UP
  info:
     build:
       enabled: true # Whether to enable build info.
     defaults:
       enabled: true # Whether to enable default info contributors.
     env:
       enabled: true # Whether to enable environment info.
     git:
       enabled: true # Whether to enable git info.
       mode: simple # Mode to use to expose git information.


auth:
  idam:
    client:
      baseUrl: ${IDAM_USER_BASE_URI:http://localhost:4501}
  provider:
    service:
      client:
        baseUrl: ${S2S_BASE_URI:http://localhost:4502}


authorization:
  idam-roles-whitelist: ${IDAM_ROLES_WHITELIST:solicitor,citizen}
  s2s-names-whitelist: ${S2S_NAMES_WHITELIST:sscs,divorce,ccd,em_gw}

info:
  app:
    environment: ${PACKAGES_ENVIRONMENT:local}
    project: ${PACKAGES_PROJECT:evidence}
    name: ${PACKAGES_NAME:dm-store}

azure:
  app_insights_key: ${APPINSIGHTS_INSTRUMENTATIONKEY:false}
  storage:
    connection-string: ${AZURE_STORAGE_CONNECTION_STRING:false}
    file-share-name: ${AZURE_FILE_SHARE_NAME:puprd-test}
    blob-container-reference: ${AZURE_BLOB_CONTAINER_REFERENCE:storage}

file-storage-client: ${FILE_STORAGE_CLIENT:azureBlobStorageClient}

app-insights:
  dev-mode: off
  request-component: on
  telemetry-component: on

toggle:
  includeidamhealth: ${ENABLE_IDAM_HEALTH_CHECK:false}
  includes2shealth: ${ENABLE_S2S_HEALTH_CHECK:false}
  uploadCSV: ${ENABLE_UPLOAD_CSV:true}
